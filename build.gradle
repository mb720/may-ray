// The wrapper task generates gradlew(.bat) scripts.
// Run "./gradlew wrapper" to upgrade Gradle.
// Wrapper API: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.wrapper.Wrapper.html
wrapper {
    // https://docs.gradle.org/current/release-notes.html
    gradleVersion = "5.4.1"
    // Include Gradle documentation and source
    distributionType = Wrapper.DistributionType.ALL
}

// This is a runnable application: We can start it using gradlew run
apply plugin: "application"
apply plugin: "java"

mainClassName = "com.bullbytes.mayray.Start"

sourceCompatibility = 12

// Define JVM options and system properties
// Here's more on defining options: https://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html
applicationDefaultJvmArgs +=
        [
                // Set the maximum Java heap size. Note that not all of that space is necessarily available to our
                // application's objects. The VM, especially the garbage collector, might use some of it, too.
                // See: http://hg.openjdk.java.net/jdk9/jdk9/hotspot/file/6dc8db7164d2/src/share/vm/gc_interface/collectedHeap.hpp#l234
                "-Xmx2g"
                // Workaround for infinite loop caused by JDK bug implementing TLS:
                // https://stackoverflow.com/questions/56708300/httpsserver-causes-100-cpu-load-with-curl
                //, "-Djdk.tls.acknowledgeCloseNotify=true"

                // If we add this flag also to the compiler arguments, we can use JDK preview features like switch expressions
                , "--enable-preview"
        ]

// If we add this flag also to the run time arguments, we can use JDK preview features like switch expressions
tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}


repositories {
    mavenCentral()
}

dependencies {
    // Logging: https://www.slf4j.org/
    // Binding for java.util.logging, also referred to as JDK 1.4 logging
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14
    compile 'org.slf4j:slf4j-jdk14:1.8.0-beta4'

    // Allows for more functional programming by providing, for example, Either, Try, and new collections (List, Map):
    // https://mvnrepository.com/artifact/io.vavr/vavr
    compile 'io.vavr:vavr:0.10.0'

    // Creates HTML:
    // https://github.com/tipsy/j2html
    // https://mvnrepository.com/artifact/com.j2html/j2html
    compile 'com.j2html:j2html:1.4.0'
}
